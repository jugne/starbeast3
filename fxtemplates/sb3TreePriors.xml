<beast version="2.0" namespace="beast.app.beauti:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.branchratemodel:beast.base.evolution.speciation:beast.base.evolution.tree.coalescent:beast.pkgmgmt:beast.base.core:beast.base.inference.util:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.evolution:beast.base.math.distributions">
	<!-- tree priors -->
	<mergewith point="sb3TreePriorTemplates">
		<!-- Plain ol' Yule -->
		<subtemplate id="YuleModel" class="beast.base.evolution.speciation.YuleModel" mainid="YuleModel.t:$(n)" 
			hmc='
speciationRatePrior/index/=Priors/YuleBirthRatePrior/
'>
<![CDATA[
			<distribution id="YuleModel.t:$(n)" spec="beast.base.evolution.speciation.YuleModel" tree="@Tree.t:$(n)">
				<birthDiffRate spec="parameter.RealParameter" id="speciationRate.t:$(n)" value="1.0" lower="0.0" estimate="true" />
			</distribution>

			<prior id="speciationRatePrior.t:$(n)" x="@speciationRate.t:$(n)">
				 <distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="10000.0"/>
			</prior>
			
			<operator id="UniformOperator.t:$(n)" spec="Uniform" tree="@Tree.t:Species" weight="3.0"/>
			<operator id="WilsonBalding.t:$(n)" spec="WilsonBalding" tree="@Tree.t:Species" weight="15.0"/>
			<operator id="Wide.t:$(n)" isNarrow="false" spec="Exchange" tree="@Tree.t:Species" weight="15.0"/>
			<operator id="Narrow.t:$(n)" isNarrow="true" spec="Exchange" tree="@Tree.t:Species" weight="1.0"/>
			<operator id="BactrianSubtreeSlide.t:$(n)" size="0.002" spec="beast.base.evolution.operator.kernel.BactrianSubtreeSlide" tree="@Tree.t:Species" weight="15.0"/>
	
			
			<operator id="AdaptableOperatorSampler.YuleModel.t:$(n)" parameter="@speciationRate.t:$(n)" spec="beast.base.evolution.operator.AdaptableOperatorSampler" weight="5.0">
				<operator id="Scale.YuleModel" parameter="@speciationRate.t:Species" scaleFactor="0.75" spec="beast.base.evolution.operator.kernel.BactrianScaleOperator" weight="1.0"/>
				<operator id="SampleFromPriorOperator.YuleModel" np="1" parameter="@speciationRate.t:$(n)" prior2="@speciationRatePrior.t:$(n)" spec="orc.operators.SampleFromPriorOperator" weight="1"/>
			</operator>

]]>


			

			<connect srcID="YuleModel.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(YuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Yule speciation prior applied to the species tree
			</connect>
			
			
			
			<connect srcID="YuleModel.t:$(n)" targetID="SpeciesTreePopSize.Species" inputName="treePrior" if="inposterior(YuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="YuleModel.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(YuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			
			
			<connect srcID="speciationRate.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true"/>
			<connect srcID="speciationRate.t:$(n)" targetID="updown.all" inputName="up" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true"/>

			<connect srcID="speciationRatePrior.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true">
				Prior on birth (a.k.a. speciation) rate applied to the species tree
			</connect>

			<connect srcID="AdaptableOperatorSampler.YuleModel.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true">
				Adaptively operate on the the birth (a.k.a. speciation) rate of the species tree
			</connect>
			
			<connect srcID="UniformOperator.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(YuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Operate on tree node heights
			</connect>
			
			<connect srcID="WilsonBalding.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(YuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Wilson Balding operator
			</connect>
			
			<connect srcID="Wide.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(YuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Wide exchange operator
			</connect>
			
			<connect srcID="Narrow.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(YuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Narrow exchange operator
			</connect>
			
			<connect srcID="BactrianSubtreeSlide.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(YuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Bactrian subtree slide operator
			</connect>


			<connect srcID="speciationRate.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n)) and speciationRate.t:$(n)/estimate=true"/>
			<connect srcID="speciationRate.t:$(n)" targetID="SBI" inputName="birthRate" if="inposterior(YuleModel.t:$(n)) and inposterior(speciationRate.t:$(n))"/>
			
			
			
			
		</subtemplate>
		
		
		
		
		
		<!-- Calibrated Yule -->
		<subtemplate id="CalibratedYuleModel" class="beast.base.evolution.speciation.CalibratedYuleModel" mainid="CalibratedYuleModel.t:$(n)" 
			suppressInputs="beast.base.evolution.speciation.CalibratedYuleModel.logMarginal,beast.base.evolution.speciation.CalibratedYuleModel.tree,beast.base.evolution.speciation.CalibratedYuleModel.treeIntervals,beast.base.evolution.speciation.CalibratedYuleModel.calibrations"
			hmc="
cySpeciationRatePrior/index/=Priors/CalibratedYuleBirthRatePrior/
">
			<![CDATA[
						<distribution id="CalibratedYuleModel.t:$(n)" spec="beast.base.evolution.speciation.CalibratedYuleModel" tree="@Tree.t:$(n)">
							<birthRate spec="parameter.RealParameter" id="cySpeciationRate.t:$(n)" value="1.0" lower="0.0" upper="10000.0" estimate="true" />
						</distribution>

						<prior id="cySpeciationRatePrior.t:$(n)" x="@cySpeciationRate.t:$(n)">
							 <distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="10000.0"/>
						</prior>

						<operator id="cySpeciationRateScale.t:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="1.0" parameter="@cySpeciationRate.t:$(n)"/>
						
						<operator id="cyUniformOperator.t:Species" spec="Uniform" tree="@Tree.t:Species" weight="3.0"/>
						<operator id="cyWilsonBalding.t:Species" spec="WilsonBalding" tree="@Tree.t:Species" weight="15.0"/>
						<operator id="cyWide.t:Species" isNarrow="false" spec="Exchange" tree="@Tree.t:Species" weight="15.0"/>
						<operator id="cyNarrow.t:$(n)" isNarrow="true" spec="Exchange" tree="@Tree.t:Species" weight="1.0"/>
						<operator id="cyBactrianSubtreeSlide.t:$(n)" size="0.002" spec="beast.base.evolution.operator.kernel.BactrianSubtreeSlide" tree="@Tree.t:Species" weight="15.0"/>
			
			]]>

			<connect srcID="CalibratedYuleModel.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Calibrated Yule speciation prior applied to the species tree
			</connect>
			<connect srcID="CalibratedYuleModel.t:$(n)" targetID="SpeciesTreePopSize.Species" inputName="treePrior" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="cySpeciationRate.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(cySpeciationRate.t:$(n)) and cySpeciationRate.t:$(n)/estimate=true"/>
			<connect srcID="cySpeciationRate.t:$(n)" targetID="updown.all" inputName="up" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(cySpeciationRate.t:$(n)) and cySpeciationRate.t:$(n)/estimate=true"/>

			<connect srcID="cySpeciationRatePrior.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(CalibratedYuleModel.t:$(n)) and cySpeciationRate.t:$(n)/estimate=true">
				Prior on birth (a.k.a. speciation) rate applied to a calibrated species tree
			</connect>

			<connect srcID="cySpeciationRateScaler.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(CalibratedYuleModel.t:$(n)) and cySpeciationRate.t:$(n)/estimate=true">
				Scale the birth (a.k.a. speciation) rate of the calibrated species tree
			</connect>

			<connect srcID="CalibratedYuleModel.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="cySpeciationRate.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(cySpeciationRate.t:$(n)) and cySpeciationRate.t:$(n)/estimate=true"/>

			<connect srcID="cySpeciationRate.t:$(n)" targetID="SBI" inputName="birthRate" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(cySpeciationRate.t:$(n))"/>
		
			<connect srcID="cyUniformOperator.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Operate on tree node heights
			</connect>
			
			<connect srcID="cyWilsonBalding.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Wilson Balding operator
			</connect>
			
			<connect srcID="cyWide.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Wide exchange operator
			</connect>
			
			<connect srcID="cyNarrow.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Narrow exchange operator
			</connect>
			
			<connect srcID="cyBactrianSubtreeSlide.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(CalibratedYuleModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Bactrian subtree slide operator
			</connect>
		
		
		</subtemplate>
		
		
		

		<!-- Birth Death model (parameterized as per Gernhard 2008) -->
		<subtemplate id="BirthDeathModel" class="beast.base.evolution.speciation.BirthDeathGernhard08Model" mainid="BirthDeathModel.t:$(n)"
			hmc='
netDiversificationRatePrior/index/=Priors/BirthRatePrior/,
ExtinctionFractionPrior/index/=Priors/DeathRatePrior/'>
<![CDATA[
			<distribution id="BirthDeathModel.t:$(n)" spec="beast.base.evolution.speciation.BirthDeathGernhard08Model" tree="@Tree.t:$(n)">
				<birthDiffRate spec="parameter.RealParameter" id="netDiversificationRate.t:$(n)" value="1.0" lower="0.0" upper="10000.0" estimate="true" />
				<relativeDeathRate spec="parameter.RealParameter" id="ExtinctionFraction.t:$(n)" value="0.5" lower="0.0" upper="1.0" estimate="true" />
			</distribution>

			<prior id="netDiversificationRatePrior.t:$(n)" x="@netDiversificationRate.t:$(n)">
				 <distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="10000.0"/>
			</prior>
			<prior id="ExtinctionFractionPrior.t:$(n)" x="@ExtinctionFraction.t:$(n)">
			 	<Beta name="distr">
                    <alpha spec="parameter.RealParameter" lower="0.0">5.0</alpha>
                    <beta spec="parameter.RealParameter" lower="0.0">1.0</beta>
                </Beta>
			</prior>
			
			<operator id="bdUniformOperator.t:Species" spec="Uniform" tree="@Tree.t:Species" weight="3.0"/>
			<operator id="bdWilsonBalding.t:Species" spec="WilsonBalding" tree="@Tree.t:Species" weight="15.0"/>
			<operator id="bdWide.t:Species" isNarrow="false" spec="Exchange" tree="@Tree.t:Species" weight="15.0"/>
			<operator id="bdNarrow.t:$(n)" isNarrow="true" spec="Exchange" tree="@Tree.t:Species" weight="1.0"/>
			<operator id="bdBactrianSubtreeSlide.t:$(n)" size="0.002" spec="beast.base.evolution.operator.kernel.BactrianSubtreeSlide" tree="@Tree.t:Species" weight="15.0"/>

			<operator id="netDiversificationRateScale.t:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@netDiversificationRate.t:$(n)"/>
			<operator id="ExtinctionFractionScale.t:$(n)" parameter="@ExtinctionFraction.t:$(n)" scaleFactor="0.5" spec="ScaleOperator" weight="3.0" />
			<operator id="ExtinctionFractionUniform.t:$(n)" parameter="@ExtinctionFraction.t:$(n)" spec="UniformOperator" weight="3.0" />
]]>

			<connect srcID="BirthDeathModel.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Birth-Death speciation prior applied to the species tree
			</connect>
			<connect srcID="BirthDeathModel.t:$(n)" targetID="SpeciesTreePopSize.Species" inputName="treePrior" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="netDiversificationRate.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(netDiversificationRate.t:$(n)) and netDiversificationRate.t:$(n)/estimate=true"/>
			<connect srcID="netDiversificationRate.t:$(n)" targetID="updown.all" inputName="up" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(netDiversificationRate.t:$(n)) and netDiversificationRate.t:$(n)/estimate=true"/>
			<connect srcID="ExtinctionFraction.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(ExtinctionFraction.t:$(n)) and ExtinctionFraction.t:$(n)/estimate=true"/>

			<connect srcID="netDiversificationRatePrior.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(netDiversificationRate.t:$(n)) and netDiversificationRate.t:$(n)/estimate=true">
				Prior on net diversification rate (speciation - extinction) applied to the species tree
			</connect>
			<connect srcID="ExtinctionFractionPrior.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(ExtinctionFraction.t:$(n)) and ExtinctionFraction.t:$(n)/estimate=true">
				Prior on extinction fraction (extinction / speciation) applied to the species tree
			</connect>

			<connect srcID="netDiversificationRateScale.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(netDiversificationRate.t:$(n)) and netDiversificationRate.t:$(n)/estimate=true">
				Scale the net diversification rate of tree t:$(n)
			</connect>
			<connect srcID="ExtinctionFractionScale.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(ExtinctionFraction.t:$(n)) and ExtinctionFraction.t:$(n)/estimate=true">
				Scale the extinction fraction of tree t:$(n)
			</connect>
			<connect srcID="ExtinctionFractionUniform.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(ExtinctionFraction.t:$(n)) and ExtinctionFraction.t:$(n)/estimate=true">
				Sample uniformly the extinction fraction of tree t:$(n)
			</connect>
			
			<connect srcID="bdUniformOperator.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Operate on tree node heights
			</connect>
			
			<connect srcID="bdWilsonBalding.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Wilson Balding operator
			</connect>
			
			<connect srcID="bdWide.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Wide exchange operator
			</connect>
			
			<connect srcID="bdNarrow.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Narrow exchange operator
			</connect>
			
			<connect srcID="bdBactrianSubtreeSlide.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Bactrian subtree slide operator
			</connect>


			<connect srcID="BirthDeathModel.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="netDiversificationRate.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(netDiversificationRate.t:$(n)) and netDiversificationRate.t:$(n)/estimate=true"/>
			<connect srcID="ExtinctionFraction.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(ExtinctionFraction.t:$(n)) and ExtinctionFraction.t:$(n)/estimate=true"/>

			<connect srcID="netDiversificationRate.t:$(n)" targetID="SBI" inputName="birthRate" if="inposterior(BirthDeathModel.t:$(n)) and inposterior(netDiversificationRate.t:$(n))"/>
		</subtemplate>
		
		
		


		
		
		<!-- FBD model with sampled ancestor support from Gavryushkina et al (2014) -->
		<subtemplate id="FBDModel" class="sa.evolution.speciation.SABirthDeathModel" mainid="FBDModel.t:$(n)"
					 suppressInputs="sa.evolution.speciation.SABirthDeathModel.removalProbability,
			sa.evolution.speciation.SABirthDeathModel.treeIntervals,
			sa.evolution.speciation.SABirthDeathModel.birthRate,
			sa.evolution.speciation.SABirthDeathModel.deathRate,
			sa.evolution.speciation.SABirthDeathModel.samplingRate,
			sa.evolution.speciation.SABirthDeathModel.conditioningOnRoot,
			sa.evolution.speciation.SABirthDeathModel.tree">
<![CDATA[
			<!-- Sampled Ancestor Birth Death model-->
			<distribution id="FBDModel.t:$(n)" spec="sa.evolution.speciation.SABirthDeathModel" tree="@Tree.t:$(n)" conditionOnRhoSampling="true">
				<parameter name="origin" id="originFBD.t:$(n)" value ="200.0" lower="0.0"/>
				<parameter name="diversificationRate" id="diversificationRateFBD.t:$(n)" value="1.0" lower="0.0"/>
				<parameter name="turnover" id="turnoverFBD.t:$(n)" value="0.5" lower="0.0" upper="1.0"/>
				<parameter name="samplingProportion" id="samplingProportionFBD.t:$(n)" value="0.5" lower="0.0" upper="1.0"/>
				<parameter estimate="false" name="rho" id="rhoFBD.t:$(n)" value="1.0" lower="0.0" upper="1.0"/>
				<parameter name="removalProbability" id="rFBD.t:$(n)" value="0.0" lower="0.0" upper="1.0"/>
			</distribution>
			<prior id="originPriorFBD.t:$(n)" x="@originFBD.t:$(n)">
				<distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="Infinity"/>
			</prior>
			<prior id="diversificationRatePriorFBD.t:$(n)" x="@diversificationRateFBD.t:$(n)">
				<distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="Infinity"/>
			</prior>
			<prior id="turnoverPriorFBD.t:$(n)" x="@turnoverFBD.t:$(n)">
				<distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="1.0"/>
			</prior>
			<prior id="samplingProportionPriorFBD.t:$(n)" x="@samplingProportionFBD.t:$(n)">
				<distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="1.0"/>
			</prior>
			<prior id="rhoPriorFBD.t:$(n)" x="@rhoFBD.t:$(n)">
				<distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="1.0"/>
			</prior>
			<operator id="originScalerFBD.t:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="3.0" parameter="@originFBD.t:$(n)"/>
			<operator id="divRateScalerFBD.t:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="10.0" parameter="@diversificationRateFBD.t:$(n)"/>
			<operator id="turnoverScalerFBD.t:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="10.0" parameter="@turnoverFBD.t:$(n)"/>
			<operator id="samplingPScalerFBD.t:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="10.0" parameter="@samplingProportionFBD.t:$(n)"/>
			<operator id="rhoScalerFBD.t:$(n)" spec="ScaleOperator" scaleFactor="0.9" weight="1.0" parameter="@rhoFBD.t:$(n)"/>
			<plugin id="SACountFBD.t:$(n)" spec="sa.evolution.tree.SampledAncestorLogger" tree="@Tree.t:$(n)"/>
			<!-- operators for sampled ancestor trees -->
			<operator id="LeafToSAFBD.t:$(n)" spec="sa.evolution.operators.LeafToSampledAncestorJump" weight="10" tree="@Tree.t:$(n)"/>
			<operator id="SAWilsonBaldingFBD.t:$(n)" spec="sa.evolution.operators.SAWilsonBalding" weight="10" tree="@Tree.t:$(n)"/>
			<operator id="SAWideFBD.t:$(n)" spec="sa.evolution.operators.SAExchange" isNarrow="false" weight="10" tree="@Tree.t:$(n)"/>
			<operator id="SANarrowFBD.t:$(n)" spec="sa.evolution.operators.SAExchange" weight="10" tree="@Tree.t:$(n)"/>
			<operator id="SAUniformOperatorFBD.t:$(n)" spec="sa.evolution.operators.SAUniform" weight="20" tree="@Tree.t:$(n)"/>
			<operator id="SATreeRootScalerFBD.t:$(n)" spec="sa.evolution.operators.SAScaleOperator" scaleFactor="0.95" weight="1" tree="@Tree.t:$(n)" rootOnly="true"/>
			<operator id="SATreeScalerFBD.t:$(n)" spec="sa.evolution.operators.SAScaleOperator" scaleFactor="0.95" weight="3" tree="@Tree.t:$(n)"/>
]]>

			<connect srcID="FBDModel.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(FBDModel.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>

			<connect srcID="originFBD.t:$(n)" targetID="FBDModel.t:$(n)" inputName="origin" if="FBDModel.t:$(n)/conditionOnRoot=false"/>

			<connect srcID="originPriorFBD.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(FBDModel.t:$(n)) and originFBD.t:$(n)/estimate=true and FBDModel.t:$(n)/conditionOnRoot=false">prior on originFBD.t:$(n)</connect>
			<connect srcID="diversificationRatePriorFBD.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(FBDModel.t:$(n)) and diversificationRateFBD.t:$(n)/estimate=true">prior on diversificationRateFBD.t:$(n)</connect>
			<connect srcID="turnoverPriorFBD.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(FBDModel.t:$(n)) and turnoverFBD.t:$(n)/estimate=true">prior on turnoverFBD.t:$(n)</connect>
			<connect srcID="samplingProportionPriorFBD.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(FBDModel.t:$(n)) and samplingProportionFBD.t:$(n)/estimate=true">prior on samplingProportionFBD.t:$(n)</connect>
			<connect srcID="rhoPriorFBD.t:$(n)" targetID="prior" inputName="distribution" if="inposterior(FBDModel.t:$(n)) and rhoFBD.t:$(n)/estimate=true">prior on rFBD.t:$(n)</connect>

			<connect srcID="originScalerFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and originFBD.t:$(n)/estimate=true and FBDModel.t:$(n)/conditionOnRoot=false"/>
			<connect srcID="divRateScalerFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and diversificationRateFBD.t:$(n)/estimate=true"/>
			<connect srcID="turnoverScalerFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and turnoverFBD.t:$(n)/estimate=true"/>
			<connect srcID="samplingPScalerFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and samplingProportionFBD.t:$(n)/estimate=true"/>
			<connect srcID="rhoScalerFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and rhoFBD.t:$(n)/estimate=true"/>

			<connect srcID="LeafToSAFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="SAWilsonBaldingFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="SAWideFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="SANarrowFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="SAUniformOperatorFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="SATreeRootScalerFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="SATreeScalerFBD.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(FBDModel.t:$(n)) and Tree.t:$(n)/estimate=true"/>

			<connect srcID="FBDModel.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(FBDModel.t:$(n))"/>
			<plate var="p" range="diversificationRate,turnover,samplingProportion,rho">
				<connect srcID="$(p)FBD.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(FBDModel.t:$(n)) and $(p)FBD.t:$(n)/estimate=true"/>
				<connect srcID="$(p)FBD.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(FBDModel.t:$(n)) and $(p)FBD.t:$(n)/estimate=true"/>
			</plate>
			<connect srcID="originFBD.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(FBDModel.t:$(n)) and originFBD.t:$(n)/estimate=true and FBDModel.t:$(n)/conditionOnRoot=false"/>
			<connect srcID="originFBD.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(FBDModel.t:$(n)) and originFBD.t:$(n)/estimate=true and FBDModel.t:$(n)/conditionOnRoot=false"/>

			<connect srcID="SACountFBD.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(FBDModel.t:$(n)) and inposterior(Tree.t:$(n))"/>
		</subtemplate>
		
		

	</mergewith>
	
	
	
	
	
	
</beast>
